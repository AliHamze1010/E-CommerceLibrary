@model E_CommerceLibrary.Models.Book
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Edit Book";
}

<!DOCTYPE html>
<html>
<head>
    <title>@ViewBag.Title</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
        }

        h2 {
            color: #333;
        }

        form {
            margin: 20px 0;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
            background-color: #fff;
        }

        label {
            font-weight: bold;
        }

        input[type="text"], select {
            width: 100%;
            padding: 8px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box;
        }

        .submit-button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .back-link {
            display: block;
            margin-top: 10px;
        }
    </style>
</head>
<body>

    <h2>Edit Book</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true)

        <label for="BookName">Book Name</label>
        @Html.EditorFor(model => model.BookName)
        @Html.ValidationMessageFor(model => model.BookName)

        <label for="author">Author</label>
        @Html.EditorFor(model => model.author)
        @Html.ValidationMessageFor(model => model.author)

        <label for="ISBN">ISBN</label>
        @Html.EditorFor(model => model.ISBN)
        @Html.ValidationMessageFor(model => model.ISBN)

        <label for="genre">Genre</label>
        @Html.EditorFor(model => model.genre)
        @Html.ValidationMessageFor(model => model.genre)

        <label for="PublisherID">Publisher</label>
        @Html.DropDownList("PublisherID", null, "-- Select Publisher --")
        @Html.ValidationMessageFor(model => model.PublisherID)

        <input type="submit" value="Update" class="submit-button" />
    }

    <div>
        @Html.ActionLink("Back to List", "Index", null, new { @class = "back-link" })
    </div>

</body>
</html>
